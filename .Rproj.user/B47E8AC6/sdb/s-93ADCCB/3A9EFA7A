{
    "collab_server" : "",
    "contents" : "####################################\n###### double deepTL ###############\n###### I.  Simulation Studies ######\n###### II. Pain Data Analysis ######\n###### Xinlei Mi, Nov 3, 2018 ######\n####################################\nlibrary(deepTL)\nlibrary(MASS)\nlibrary(randomForest)\nsetwd(\"/Users/applemi/Dropbox (UFL)/unknownProj/paper2/\")\nsource(\"simulation-scenarios.R\")\nsource(\"dml.R\")\n\n#### Simulations ####\nn.iter <- 10\nresult.df <- data.frame()\nfor(i in 1:n.iter) {\n\n  cat(\"----- i =\", i, \"------- \\n\")\n  set.seed((i - 1) * 100 + 20180601 + 28 * 1001)  #### Feel free to change the seed\n  scenario <- 2      #### Scenario: 1/2/3\n  n <- 5000          #### Sample size: 1000/2000/5000/20000/50000 or any integer > 100\n  p <- 20            #### Dimension of X: 10/15/20/30/40/50/75/100 or any integer >= 10\n  beta.true <- 1     #### True Beta: 0/0.2/0.5/1/2/5/7.5/10 or any real number\n  sigma <- 1         #### Sigma: 0/0.2/0.5/1/2/3/4/5 or any non-negative number\n\n  x <- mvrnorm(n, rep(0, p), diag(p))\n  prob <- prob_z_sce(scenario, x, alpha1)\n  z <- rbinom(n, 1, prob)\n  y <- y_sce(scenario, x, beta.true, z, sigma, alpha2)\n\n  #### Proposed ####\n  cat(\"Proposed Methods... \\n\")\n  trt_obj <- importTrt(x = x, y = y, z = z)\n  result.df <- rbind(result.df, double_deepTL(trt_obj, methods = c(\"revised-semi\", \"semi\")))\n\n  #### DML ####\n  cat(\"DML Methods... \\n\")\n  dml_result <- dml_method(x, y, z)\n  result.df <- rbind(result.df, data.frame(method = c(\"dml-plm\", \"dml-dr\"),\n                                           beta = dml_result[c(1, 3)],\n                                           var = dml_result[c(2, 4)]))\n\n  #### Naive & Oracle ####\n  result.df <- rbind(result.df, lm_naive(x, y, z), ps_naive(x, y, z), lm_oracle(x, y, z, scenario))\n}\n\nresult.df$bias <- beta.true - result.df$beta\nresult.df$sd <- sqrt(result.df$var)\nresult.df$ci <- (result.df$bias > -qnorm(0.975) * result.df$sd) *  (result.df$bias < qnorm(0.975) * result.df$sd)\n\navg_res <- aggregate(result.df[, c(\"beta\", \"sd\", \"ci\", \"bias\")], list(method = result.df$method), mean)\nvar_res <- aggregate(result.df[, c(\"beta\")], list(method = result.df$method), var)\ndata.frame(avg_res, emp_sd = sqrt(var_res$x), sr_mse = sqrt(avg_res$bias**2 + var_res$x))\n\n#### Pain Data Analysis ####\npain <- read.csv(\"pain.csv\")\nx <- as.matrix(pain[, -c(1, 2)])\ny <- pain[, 1]\nz <- pain[, 2]\nctrl <- list(n.ensemble = 100,\n             esCtrl = list(n.hidden = 10:5*2, n.batch = 100, n.epoch = 100, norm.x = FALSE,\n                           norm.y = FALSE, activate = \"relu\", accel = \"rcpp\", l1.reg = 10**-4,\n                           plot = FALSE, learning.rate.adaptive = \"adam\"))\n\npain_res <- data.frame()\nn.iter <- 50\nfor(i in 1:n.iter) {\n\n  set.seed(i - 1)\n  print(Sys.time())\n  cat(\"---- seed =\", i-1, \"---- \\n\")\n  trt_obj <- importTrt(x = x, y = y, z = z)\n  pain_res <- rbind(pain_res, double_deepTL(trt_obj, en_dnn_ctrl1 = ctrl, en_dnn_ctrl2 = ctrl,\n                                            methods = c(\"revised-semi\", \"semi\")))\n\n  dml_result <- dml_method(x, y, z)\n  pain_res <- rbind(pain_res, data.frame(method = c(\"dml-plm\", \"dml-dr\"),\n                                         beta = dml_result[c(1, 3)],\n                                         var = dml_result[c(2, 4)]))\n\n  print(pain_res[(i-1)*4 + 1:4, ])\n}\npain_res <- rbind(pain_res, lm_naive(x, y, z), ps_naive(x, y, z), lm_anova(x, y, z))\n\npain_res$se <- sqrt(pain_res$var)\npain_res$p_val <- 2 * (1 - pnorm(abs(pain_res$beta)/pain_res$se))\npain_res\n\n",
    "created" : 1541301555202.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1224563201",
    "id" : "3A9EFA7A",
    "lastKnownWriteTime" : 1541313381,
    "last_content_update" : 1541313381795,
    "path" : "~/Dropbox (UFL)/unknownProj/paper2/simulations.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}