{
    "collab_server" : "",
    "contents" : "#### DML method ####\ndml_method <- function(x, y, z, method = \"rf\", ntree = 2000) {\n\n  n <- dim(x)[1]\n  ###### Divide the data for cross fitting\n  ind1 <- sample(1:n, floor(n/2))\n  x1 <- x[ind1, ]\n  y1 <- y[ind1]\n  z1 <- z[ind1]\n  x2 <- x[-ind1, ]\n  y2 <- y[-ind1]\n  z2 <- z[-ind1]\n\n  #### DML - PLM\n  pred1 <- dml(x2, y2, z2, x1, y1, z1, method, ntree)\n  pred2 <- dml(x1, y1, z1, x2, y2, z2, method, ntree)\n  theta1 <- sum((y1 - pred1[, 1])*(z1 - pred1[, 2]))/sum((z1 - pred1[, 2])**2)\n  theta2 <- sum((y2 - pred2[, 1])*(z2 - pred2[, 2]))/sum((z2 - pred2[, 2])**2)\n  theta <- (theta1 + theta2) / 2\n\n  pred <- rbind(pred1, pred2)\n  y_ <- c(y1, y2)\n  z_ <- c(z1, z2)\n  var_est <- mean((z_ - pred[, 2])**2*(y_ - pred[, 1] - theta*(z_ - pred[, 2]))**2) /\n    mean((z_ - pred[, 2])**2)**2 / n\n\n  #### DML - DR\n  theta1_dr <- mean((z1*y1 - pred1[, 3]*(z1 - pred1[, 2]))/pred1[, 2] -\n                      ((1 - z1)*y1 + pred1[, 4]*(z1 - pred1[, 2]))/(1 - pred1[, 2]))\n  theta2_dr <- mean((z2*y2 - pred2[, 3]*(z2 - pred2[, 2]))/pred2[, 2] -\n                      ((1 - z2)*y2 + pred2[, 4]*(z2 - pred2[, 2]))/(1 - pred2[, 2]))\n  theta_dr <- (theta1_dr + theta2_dr) / 2\n  theta_dr_var <- mean(((z_*y_ - pred[, 3]*(z_ - pred[, 2]))/pred[, 2] -\n                          ((1 - z_)*y_ + pred[, 4]*(z_ - pred[, 2]))/(1 - pred[, 2]))**2) / n\n\n  return(c(theta, var_est, theta_dr, theta_dr_var))\n}\n\n#### called by \"dml_method\"\ndml <- function(x_train, y_train, z_train,\n                x_valid, y_valid, z_valid,\n                method, ntree) {\n\n  mod_y <- randomForest(x_train, y_train, ntree = ntree)\n  mod_z <- randomForest(x_train, factor(z_train), ntree = ntree)\n  mod_y1 <- randomForest(x_train[z_train == 1, ], y_train[z_train == 1], ntree = ntree)\n  mod_y0 <- randomForest(x_train[z_train == 0, ], y_train[z_train == 0], ntree = ntree)\n\n  ey <- predict(mod_y, x_valid)\n  ez <- predict(mod_z, x_valid, type = \"prob\")[, \"1\"]\n  ey1 <- predict(mod_y1, x_valid)\n  ey0 <- predict(mod_y0, x_valid)\n\n  return(cbind(ey, ez, ey1, ey0))\n}\n",
    "created" : 1541302058900.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2734196324",
    "id" : "EA09B646",
    "lastKnownWriteTime" : 1541305375,
    "last_content_update" : 1541305375295,
    "path" : "~/Dropbox (UFL)/unknownProj/semi-paper-sim/dml.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}