{
    "collab_server" : "",
    "contents" : "double_deepTL <- function(object,\n                          en_dnn_ctrl1 = NULL,\n                          en_dnn_ctrl2 = NULL,\n                          methods = c(\"revised-semi\", \"semi\", \"cov-adj\",\n                                      \"ipw1\", \"ipw2\", \"ipw3\", \"double-robust\")) {\n\n  if(is.null(en_dnn_ctrl1))\n    en_dnn_ctrl1 <- list(n.ensemble = 100,\n                         esCtrl = list(n.hidden = 10:5*2, n.batch = 100, n.epoch = 100, norm.x = TRUE,\n                                       norm.y = TRUE, activate = \"relu\", accel = \"rcpp\", l1.reg = 10**-4,\n                                       plot = FALSE, learning.rate.adaptive = \"adam\", early.stop.det = 100))\n  if(is.null(en_dnn_ctrl2))\n    en_dnn_ctrl2 <- list(n.ensemble = 100,\n                         esCtrl = list(n.hidden = 10:5*2, n.batch = 100, n.epoch = 250, norm.x = TRUE,\n                                       norm.y = TRUE, activate = \"relu\", accel = \"rcpp\", l1.reg = 10**-4,\n                                       plot = FALSE, learning.rate.adaptive = \"adam\", early.stop.det = 100))\n\n  if(!is.factor(object@z))\n    object@z <- factor(ifelse(object@z == 1, \"A\", \"B\"), levels = c(\"A\", \"B\"))\n  z_obj <- importDnnet(x = object@x, y = object@z)\n\n  result <- data.frame()\n\n  cat(\"Fitting E(Z|X) ... \\n\")\n  z_mod <- do.call(\"ensemble_dnnet\", appendArg(en_dnn_ctrl1, \"object\", z_obj, TRUE))\n  z_pred <- predict(z_mod, object@x)[, levels(object@z)[1]]\n  z_nmrc <- (object@z == levels(object@z)[1]) * 1\n\n  if(\"revised-semi\" %in% methods || \"cov-adj\" %in% methods) {\n\n    lm_mod <- lm(object@y ~ z_nmrc + z_pred)\n    beta1 <- coefficients(lm_mod)[2]\n    if(\"cov-adj\" %in% methods)\n      result <- rbind(result, data.frame(method = \"cov-adj-dnn-en\", beta = beta1, var = vcov(lm_mod)[2, 2]))\n    if(\"revised-semi\" %in% methods) {\n\n      cat(\"Fitting E(Y - b1*Z|X) ... \\n\")\n      y_star_obj <- importDnnet(x = object@x, y = object@y - beta1 * z_nmrc)\n      y_star_mod <- do.call(\"ensemble_dnnet\", appendArg(en_dnn_ctrl2, \"object\", y_star_obj, TRUE))\n      y_star_pred <- predict(y_star_mod, object@x)\n      beta_est <- sum((object@y - beta1 * z_nmrc - y_star_pred) * (z_nmrc - z_pred)) / sum((z_nmrc - z_pred)**2) + beta1\n      beta_var <- mean(((object@y - beta1 * z_nmrc - y_star_pred) - (beta_est - beta1) * (z_nmrc - z_pred))**2) / sum((z_nmrc - z_pred)**2)\n      result <- rbind(result, data.frame(method = \"revised-semi-dnn-en\", beta = beta_est, var = beta_var))\n    }\n  }\n\n  if(\"semi\" %in% methods) {\n\n    cat(\"Fitting E(Y|X) ... \\n\")\n    y_obj <- importDnnet(x = object@x, y = object@y)\n    y_mod <- do.call(\"ensemble_dnnet\", appendArg(en_dnn_ctrl2, \"object\", y_obj, TRUE))\n    y_pred <- predict(y_mod, object@x)\n    beta_est <- sum((object@y - y_pred) * (z_nmrc - z_pred)) / sum((z_nmrc - z_pred)**2)\n    beta_var <- mean(((object@y - y_pred) - beta_est * (z_nmrc - z_pred))**2) / sum((z_nmrc - z_pred)**2)\n    result <- rbind(result, data.frame(method = \"semi-dnn-en\", beta = beta_est, var = beta_var))\n  }\n\n  return(result)\n}\n",
    "created" : 1541296696420.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1574661223",
    "id" : "6EF57520",
    "lastKnownWriteTime" : 1541519356,
    "last_content_update" : 1541519356,
    "path" : "~/Dropbox (UFL)/Rpackages/deepTL/deepTL/R/4-1-double-deep-tl.R",
    "project_path" : "R/4-1-double-deep-tl.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}