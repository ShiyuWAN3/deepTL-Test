library(deepTL)
library(MASS)

n_sample <- 1000
n_p <- 5

g <- function(x) 1/(1+exp(x[, 1]**2*2 - x[, 2]**2*2))
h <- function(x) abs(x[, 1])*x[, 2]**2 - x[, 3]**3
f <- function(x) x[, 1]*x[, 3]*2 + x[, 2]**4

x <- mvrnorm(n_sample, rep(0, n_p), diag(n_p))
prob.z <- g(x)
z <- rbinom(n_sample, 1, prob.z)
y <- z*h(x) + f(x) + rnorm(n_sample)

e.y.mod <- ensemble_dnnet(importDnnet(x = x, y = y), 100,
                          esCtrl = list(n.hidden = c(30, 20, 10), n.epoch = 500, n.batch = 50,
                                        early.stop = TRUE, early.stop.det = 1000, plot = TRUE,
                                        norm.x = FALSE, norm.y = TRUE,
                                        learning.rate.adaptive = "adam"))
e.z.mod <- ensemble_dnnet(importDnnet(x = x, y = factor(ifelse(z, "A", "B"))), 100,
                          esCtrl = list(n.hidden = c(30, 20, 10), n.epoch = 100, n.batch = 50,
                                        early.stop = TRUE, early.stop.det = 1000, plot = TRUE,
                                        norm.x = FALSE, norm.y = TRUE,
                                        learning.rate.adaptive = "adam"))
e.y <- predict(e.y.mod, x)
e.z <- predict(e.z.mod, x)[, "A"]
h.mod <- ensemble_dnnet(importDnnet(x = x, y = (y - e.y)/(z - e.z), w = (z - e.z)**2), 100,
                        esCtrl = list(n.hidden = c(30, 20, 10), n.epoch = 250, n.batch = 50,
                                      early.stop = TRUE, early.stop.det = 1000, plot = TRUE,
                                      norm.x = FALSE, norm.y = TRUE,
                                      learning.rate.adaptive = "adam"))
h.x <- predict(h.mod, x)

plot(e.z, g(x))
abline(0, 1, col = 2)
plot(h.x, h(x))
abline(0, 1, col = 2)
plot(e.y, h(x)*g(x)+f(x))
abline(0, 1, col = 2)

x.test <- mvrnorm(n_sample, rep(0, n_p), diag(n_p))
plot(h(x.test), predict(h.mod, x.test))
abline(0, 1, col = 2)
plot(f(x.test) + h(x.test)*g(x.test), predict(e.y.mod, x.test))
abline(0, 1, col = 2)
plot(g(x.test), predict(e.z.mod, x.test)[, "A"])
abline(0, 1, col = 2)
mean((h(x.test) - predict(h.mod, x.test))**2)

###############
f1.mod <- ensemble_dnnet(importDnnet(x = x[z == 1, ], y = y[z == 1]), 100,
                         esCtrl = list(n.hidden = c(30, 20, 10), n.epoch = 500, n.batch = 50,
                                       early.stop = TRUE, early.stop.det = 1000, plot = TRUE,
                                       norm.x = FALSE, norm.y = TRUE,
                                       learning.rate.adaptive = "adam"))
f2.mod <- ensemble_dnnet(importDnnet(x = x[z == 0, ], y = y[z == 0]), 100,
                         esCtrl = list(n.hidden = c(30, 20, 10), n.epoch = 500, n.batch = 50,
                                       early.stop = TRUE, early.stop.det = 1000, plot = TRUE,
                                       norm.x = FALSE, norm.y = TRUE,
                                       learning.rate.adaptive = "adam"))
plot(h(x.test), predict(f1.mod, x.test) - predict(f2.mod, x.test))
abline(0, 1, col = 2)
mean((h(x.test) - predict(f1.mod, x.test) + predict(f2.mod, x.test))**2)




