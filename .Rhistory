accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
load_all()
pred_mult <- predict(dnn_mod_mult, x_test)
load_all()
pred_mult <- predict(dnn_mod_mult, x_test)
load_all()
pred_mult <- predict(dnn_mod_mult, x_test)
head(pred_mult)
table(apply(pred_mult, 1, which.max), y_test)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
load_all()
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
#### multi classification
x <- matrix(rnorm(n*p), n, p)
y <- factor(ifelse(apply(x, 1, max) > 1.5,
"A", ifelse(apply(x, 1, max) < 0.5, "C", "B")), levels = c("A", "B", "C"))
x_test <- matrix(rnorm(n_test*p), n, p)
y_test <- factor(ifelse(apply(x_test, 1, max) > 1.5,
"A", ifelse(apply(x_test, 1, max) < 0.5, "C", "B")), levels = c("A", "B", "C"))
dnn_dat <- importDnnet(x, y)
dnn_spl <- splitDnnet(dnn_dat, 0.8)
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_multi_bag <- predict(bag_mod_mult, x_test)
table(apply(pred_multi_bag, 1, which.max), y_test)
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_multi_bag <- predict(bag_mod_mult, x_test)
table(apply(pred_multi_bag, 1, which.max), y_test)
bag_mod_ordi@model.type
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
load_all()
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
bag_mod_ordi@keep
bag_mod_mult@keep
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
bag_mod_ordi@loss
dnn_mod_ordi@loss
dnn_mod_ordi@loss.traj
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
i
for(d in (dim(pred)[2]-1):1) pred[, d] <- pred[, d] + pred[, d+1]
pred <- pred[, -1]
if(i == 1) {
pred.table <- array(NA, dim = c(n.ensemble, dim(pred)))
mat_y <- matrix(NA, dim(pred)[1], dim(pred)[2] + 1)
for(d in 1:dim(pred)[1]) mat_y[d, match(object@y[d], levels(object@y))] <- 1
mat_y <- mat_y[, -1]
}
pred.table[i, , ] <- pred
dim(pred.table)
pred.table <- array(NA, dim = c(n.ensemble, dim(pred)))
mat_y <- matrix(NA, dim(pred)[1], dim(pred)[2] + 1)
for(d in 1:dim(pred)[1]) mat_y[d, match(object@y[d], levels(object@y))] <- 1
mat_y <- mat_y[, -1]
pred.table[i, , ] <- pred
dim(pred.table)
-sum((mat_y[-trainObj.ind, ] * log(pred[-trainObj.ind, ]) +
(1-mat_y[-trainObj.ind, ]) * log(1-pred[-trainObj.ind, ])) *
validObj@w) / sum(validObj@w)
sum(validObj@w)
mat_y[-trainObj.ind, ] * log(pred[-trainObj.ind, ])
pred[-trainObj.ind, ]
log(pred[-trainObj.ind, ])
mat_y[-trainObj.ind, ]
mat_y
d
dim(pred)[1]
match(object@y[d], levels(object@y))
mat_y <- matrix(NA, dim(pred)[1], dim(pred)[2] + 1)
for(d in 1:dim(pred)[1]) mat_y[d, 1:match(object@y[d], levels(object@y))] <- 1
mat_y
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
load_all()
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
head(pred_ordi_bag)
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 2,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
quantile(apply(x, 1, max), c(0.2, 0.4, 0.6, 0.8))
n_test
n_test <- 10000
#### multi classification
x <- matrix(rnorm(n*p), n, p)
y <- factor(ifelse(apply(x, 1, max) > 1.5,
"A", ifelse(apply(x, 1, max) < 0.5, "C", "B")), levels = c("A", "B", "C"))
x_test <- matrix(rnorm(n_test*p), n, p)
y_test <- factor(ifelse(apply(x_test, 1, max) > 1.5,
"A", ifelse(apply(x_test, 1, max) < 0.5, "C", "B")), levels = c("A", "B", "C"))
quantile(apply(x_test, 1, max), c(0.2, 0.4, 0.6, 0.8))
#### multi classification
x <- matrix(rnorm(n*p), n, p)
h <- apply(x, 1, max)
hist(h)
y <- factor(ifelse(h < 0.6, "A",
ifelse(h < 0.95, "B",
ifelse(h < 1.25, "C",
ifelse(h < 1.65, "D", "E")))), levels = c("A", "B", "C", "D", "E"))
table(y)
x_test <- matrix(rnorm(n_test*p), n, p)
h_test <- apply(x_test, 1, max)
y_test <- factor(ifelse(h_test < 0.6, "A", ifelse(h_test < 0.95, "B", ifelse(h_test < 1.25, "C", ifelse(h_test < 1.65, "D", "E")))),
levels = c("A", "B", "C", "D", "E"))
table(y_test)
dnn_dat <- importDnnet(x, y)
dnn_spl <- splitDnnet(dnn_dat, 0.8)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
sum(diag(table(apply(pred_mult, 1, which.max), y_test)))
sum(diag(table(apply(pred_mult, 1, which.max), y_test)))/sum(table(apply(pred_mult, 1, which.max), y_test))
n_test
x_test <- matrix(rnorm(n_test*p), n_test, p)
h_test <- apply(x_test, 1, max)
y_test <- factor(ifelse(h_test < 0.6, "A", ifelse(h_test < 0.95, "B", ifelse(h_test < 1.25, "C", ifelse(h_test < 1.65, "D", "E")))),
levels = c("A", "B", "C", "D", "E"))
table(y_test)
quantile(h_test, 1:4/5)
x <- matrix(rnorm(n*p), n, p)
h <- apply(x, 1, max)
y <- factor(ifelse(h < 0.61, "A", ifelse(h < 0.98, "B", ifelse(h < 1.31, "C", ifelse(h < 1.73, "D", "E")))),
levels = c("A", "B", "C", "D", "E"))
x_test <- matrix(rnorm(n_test*p), n_test, p)
h_test <- apply(x_test, 1, max)
y_test <- factor(ifelse(h_test < 0.61, "A", ifelse(h_test < 0.98, "B", ifelse(h_test < 1.31, "C", ifelse(h_test < 1.73, "D", "E")))),
levels = c("A", "B", "C", "D", "E"))
dnn_dat <- importDnnet(x, y)
dnn_spl <- splitDnnet(dnn_dat, 0.8)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
sum(diag(table(apply(pred_mult, 1, which.max), y_test)))/sum(table(apply(pred_mult, 1, which.max), y_test))
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_multi_bag <- predict(bag_mod_mult, x_test)
table(apply(pred_multi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_multi_bag, 1, which.max), y_test)))/sum(table(apply(pred_multi_bag, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi_bag, 1, which.max), y_test)))/sum(table(apply(pred_ordi_bag, 1, which.max), y_test))
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi_bag, 1, which.max), y_test)))/sum(table(apply(pred_ordi_bag, 1, which.max), y_test))
head(pred_ordi)
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(50, 50, 50),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(50, 50, 50),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(50, 50, 50),
l1.reg = 10**-5,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(50, 50, 50),
l1.reg = 10**-3,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(50, 50, 50),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 100, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 25, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 10, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 100,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi_bag, 1, which.max), y_test)))/sum(table(apply(pred_ordi_bag, 1, which.max), y_test))
dnn_mod_ordi@model.type
quantile(h_test, 1:3/4)
x <- matrix(rnorm(n*p), n, p)
h <- apply(x, 1, max)
y <- factor(ifelse(h < 0.71, "A", ifelse(h < 1.13, "B", ifelse(h < 1.61, "C", "D"))),
levels = c("A", "B", "C", "D", "E"))
x_test <- matrix(rnorm(n_test*p), n_test, p)
h_test <- apply(x_test, 1, max)
y_test <- factor(ifelse(h_test < 0.71, "A", ifelse(h_test < 1.13, "B", ifelse(h_test < 1.61, "C", "D"))),
levels = c("A", "B", "C", "D", "E"))
dnn_dat <- importDnnet(x, y)
dnn_spl <- splitDnnet(dnn_dat, 0.8)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
sum(diag(table(apply(pred_mult, 1, which.max), y_test)))/sum(table(apply(pred_mult, 1, which.max), y_test))
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_multi_bag <- predict(bag_mod_mult, x_test)
table(apply(pred_multi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_multi_bag, 1, which.max), y_test)))/sum(table(apply(pred_multi_bag, 1, which.max), y_test))
#### ordinal
# x <- matrix(rnorm(n*p), n, p)
# y <- factor(ifelse(apply(x, 1, max) > 1.5,
#                    "A", ifelse(apply(x, 1, max) < 0.5, "C", "B")),
#             levels = c("A", "B", "C"), ordered = TRUE)
#
# x_test <- matrix(rnorm(n_test*p), n, p)
# y_test <- factor(ifelse(apply(x_test, 1, max) > 1.5,
#                         "A", ifelse(apply(x_test, 1, max) < 0.5, "C", "B")),
#                  levels = c("A", "B", "C"), ordered = TRUE)
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 100,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi_bag, 1, which.max), y_test)))/sum(table(apply(pred_ordi_bag, 1, which.max), y_test))
x <- matrix(rnorm(n*p), n, p)
h <- apply(x, 1, max)
y <- factor(ifelse(h < 0.71, "A", ifelse(h < 1.13, "B", ifelse(h < 1.61, "C", "D"))),
levels = c("A", "B", "C", "D"))
x_test <- matrix(rnorm(n_test*p), n_test, p)
h_test <- apply(x_test, 1, max)
y_test <- factor(ifelse(h_test < 0.71, "A", ifelse(h_test < 1.13, "B", ifelse(h_test < 1.61, "C", "D"))),
levels = c("A", "B", "C", "D"))
dnn_dat <- importDnnet(x, y)
dnn_spl <- splitDnnet(dnn_dat, 0.8)
dnn_mod_mult <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_mult <- predict(dnn_mod_mult, x_test)
table(apply(pred_mult, 1, which.max), y_test)
sum(diag(table(apply(pred_mult, 1, which.max), y_test)))/sum(table(apply(pred_mult, 1, which.max), y_test))
bag_mod_mult <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_multi_bag <- predict(bag_mod_mult, x_test)
table(apply(pred_multi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_multi_bag, 1, which.max), y_test)))/sum(table(apply(pred_multi_bag, 1, which.max), y_test))
#### ordinal
# x <- matrix(rnorm(n*p), n, p)
# y <- factor(ifelse(apply(x, 1, max) > 1.5,
#                    "A", ifelse(apply(x, 1, max) < 0.5, "C", "B")),
#             levels = c("A", "B", "C"), ordered = TRUE)
#
# x_test <- matrix(rnorm(n_test*p), n, p)
# y_test <- factor(ifelse(apply(x_test, 1, max) > 1.5,
#                         "A", ifelse(apply(x_test, 1, max) < 0.5, "C", "B")),
#                  levels = c("A", "B", "C"), ordered = TRUE)
dnn_dat <- importDnnet(x, factor(y, ordered = TRUE))
dnn_spl <- splitDnnet(dnn_dat, dnn_spl$split)
dnn_mod_ordi <- dnnet(dnn_spl$train, validate = dnn_spl$valid,
n.hidden = c(30, 20, 10),
l1.reg = 10**-4,
n.batch = 50, n.epoch = 500, early.stop.det = 1000, plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam")
pred_ordi <- predict(dnn_mod_ordi, x_test)
table(apply(pred_ordi, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi, 1, which.max), y_test)))/sum(table(apply(pred_ordi, 1, which.max), y_test))
bag_mod_ordi <- ensemble_dnnet(dnn_dat, 10,
esCtrl = list(n.hidden = c(30, 20, 10),
l1.reg = 10**-4, n.batch = 50, n.epoch = 500, early.stop.det = 1000,
plot = TRUE,
accel = "rcpp", learning.rate.adaptive = "adam"))
pred_ordi_bag <- predict(bag_mod_ordi, x_test)
table(apply(pred_ordi_bag, 1, which.max), y_test)
sum(diag(table(apply(pred_ordi_bag, 1, which.max), y_test)))/sum(table(apply(pred_ordi_bag, 1, which.max), y_test))
